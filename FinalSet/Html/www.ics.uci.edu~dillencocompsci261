<HTML><HEAD>
<TITLE>CompSci 261 - Data Structures - Winter, 2014 (Dillencourt)</TITLE>
</HEAD><BODY>
<H2>CompSci 261 - Data Structures - Winter, 2014 (Dillencourt)</H2>

<p>Some of the information here is incomplete.  Additional details will be
added as they become available.</p> 
<UL> 
<LI> <a href="hw">Click here for the homework assignments</a>
<LI> Course Instructor: 
<UL> 
<LI> Professor Michael Dillencourt
<LI> Email: dillenco at ics dot uci dot edu
<LI> Office Hours: <a href="http://www.ics.uci.edu/~dillenco/officehrs/">Click 
here</a>.
I am also available after class for questions.
<LI> Office: DBH 4086
</UL>
<LI> Reader: 
<UL> 
<LI> Ms. Laleh Beni
<LI> Email: laghabab at uci dot edu
<LI> Office Hours: W 9-10:30AM in DBH 3091
<LI> Please note that Ms. Beni's office hours are for picking up homework
and for questions about how homework was graded.  More general questions
about course material should go to the instructor.
</UL>
<A NAME="classmeetings"></A>
<LI> Class meetings:
<UL>
<LI> M W, 3:30PM-4:50PM, SE2 1304
<LI> <b>Midterm:</b> Wed, February 12 (in class, at normal class time, in normal room)
<LI> <b>Final Exam:</b> Mon, Mar 17, 4:00-6:00PM (Location TBD)
<LI> There will be no class on the following University holidays:
<UL>
<LI> Monday, January 20 (Martin Luther King, Jr. Day) 
<LI> Monday, February 17 (Presidents' Day) 
</UL>
<LI>If you have scheduling conflicts that make it impossible to attend class
regularly, you should not take this course this quarter.
Any request that special allowances be made because you are unable to attend
class regularly will not receive a sympathetic response.
</UL>
<LI> Final Exam: 
<UL>
<LI> Time shown about under <a href="#classmeetings">Class Meetings.</a>
<LI> The final exam will also serve as the CompSCI 261 portion of the 
the Comprehensive Exam in the Computer Science Masters Program. 
<UL>
<LI> The criteria for passing the Comprehensive Exam will be announced during
the quarter.
<LI> Students who wish to take the CompSci 261 portion of the 
Comprehensive Exam but are not enrolled in the course should contact 
me by email before February 7(the end of week 5) reserve a place in the exam.
Please put the string "CompSci 261 Masters Exam" in the subject line of
your email.
</UL>
<A NAME="dropadd"></A>
</UL>
<LI>Drop/Add Policy </H3>

<UL>
<LI> For the first two weeks of the quarter,
all adds and drops will be handled automatically through the
Registrar's WebReg system.
<LI> After the second week of classes, adds and drops are not allowed.  
Exceptions require approval by the Associate Dean for Graduate Studies.
Such approval is only granted in extraordinary circumstances.
</UL>
<LI> Grading: 
<UL>
<LI> The grading will be based on the following weights:
<UL>
<LI> Homework: 10%
<LI> Midterm: 40%
<LI> Final: 50%
</UL>
</UL>
<LI> Course textbook:
<UL>
<LI> There is no required textbook.  Much of the course material will be 
drawn from topics in the Wikipedia "book" 
<A href="http://en.wikipedia.org/wiki/Book:Fundamental_Data_Structures">
<em>Fundamental Data Structures</em></A>. 
</UL>
<LI>EMail:
<UL>
<LI> If you send me email about the course, please do the following
<UL>
<LI>
Please include the string "CompSci 261:" at the start of the subject line 
(to ensure that it gets
past my spam filter). 
<LI>
Please include your name and student number in the message.
<LI>
If you are not writing me from your official UCI email address, please
cc your official UCI email address.
</UL>
(The reason for the first request is self-explanatory.  The second and the
third are because I occasionally get email from non-UCI-students asking for
help on problems, and I want to weed them out.)
</UL>
<LI>Course Announcements:
<UL>
<LI>Course announcements will be sent via email to all students enrolled
in the class.
If for some reason you are not receiving these announcements, you can
view the archive by 
<A href="https://eee.uci.edu/classmail/w14/34930/">
clicking here</A>.
</UL>
<LI>Course Notes (registered students only):
<UL>
<LI> Course notes, in the form of transparencies used for the lectures,
are available <a href="./notes">here</a>.  
Access is restricted to students enrolled in the course.  
Authentication information will be given out in class.
</UL>
<LI> List of topics.  The following schedule is approximate and may
change over the course of the quarter.
<UL>
<LI><b>Week 1: </b> 
Introduction. 
Algorithms and Data Structures. 
<a href="http://en.wikipedia.org/wiki/Potential_method"> The 
potential method of amortized analysis<a>. 
<a href="http://en.wikipedia.org/wiki/Dynamic_array">Dynamic arrays</a>.
<LI><b>Week 2: </b> 
The 
<a href="http://en.wikipedia.org/wiki/Associative_array">dictionary problem</a>
 and <a href="http://en.wikipedia.org/wiki/Hash_table">hash tables</a>. 
<a href="http://en.wikipedia.org/wiki/Hash_table#Separate_chaining">Hash
chaining</a>, 
<a href="http://en.wikipedia.org/wiki/Linear_probing">linear probing</a>, and 
<a href="http://en.wikipedia.org/wiki/Cuckoo_hashing">cuckoo hashing</a>.<br>
Hash functions: 
<a href="http://en.wikipedia.org/wiki/Cryptographic_hash_function">cryptographic
hash functions</a>, 
<a href="http://en.wikipedia.org/wiki/K-independent_hashing">k-independent 
hashing</a>, and 
<a href="http://en.wikipedia.org/wiki/Tabulation_hashing">tabulation 
hashing</a>. 
<LI><b>Week 3: </b>
Bloom filters, invertible Bloom filters, MinHash, streaming data structures, 
and frequent item detection.
<LI><b>Week 4: </b>
<a href="http://en.wikipedia.org/wiki/Priority_queue">Priority
queues</a>. 
<a href="http://en.wikipedia.org/wiki/Binary_heap">Binary heaps</a> 
and <a href="http://en.wikipedia.org/wiki/D-ary_heap">k-ary heaps</a>. 
<a href="http://en.wikipedia.org/wiki/Fibonacci_heap">Fibonacci heaps</a>
<LI><b>Week 5: </b>
<a href="http://en.wikipedia.org/wiki/Binary_search_tree">
Binary search trees</a> and predecessor queries. 
<a href="http://en.wikipedia.org/wiki/Random_binary_tree">Random binary 
search trees</a>, 
<a href="http://en.wikipedia.org/wiki/AVL_tree">AVL trees</a>, and 
<a href="http://www.cs.princeton.edu/%7Esssix/papers/rb-trees-journal.pdf">rank-balanced trees</a>.<br>
<a href="http://en.wikipedia.org/wiki/Splay_tree">Splay trees</a>,
static optimality, 
<a href="http://en.wikipedia.org/wiki/Competitive_analysis_%28online_algorithm%29">competitive analysis</a>, 
and the dynamic optimality conjecture.<br>
<LI><b>Week 6: </b>
Tries and suffix trees.
<LI><b>Week 7: </b>
Range searching, Dynamic prefix sums and augmented binary search trees.
<LI><b>Week 8: </b>
Range minima, Cartesian trees, and lowest common ancestors. Persistence.
<LI><b>Week 9: </b>
Integer searching. Union find.
<LI><b>Week 10:</b>
Reserved for catching up / review / additional topics.
</UL>
</UL>
</UL>


Last modified: January 27, 2014
</BODY></HTML>


