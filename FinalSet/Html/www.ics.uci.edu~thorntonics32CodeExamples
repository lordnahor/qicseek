<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC
 "-//W3C//DTD XHTML 1.1//EN"
 "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">

<head>
<meta http-equiv="content-type" content="text/html; charset=iso-8859-1" />
<link rel="stylesheet" href="../course.css" type="text/css" />

<title>ICS 32 Winter 2014, Code Examples</title>

</head>

<body>

<div class="navbar">

<p>
ICS 32 Winter 2014 |
<a href="../index.html">News</a> |
<a href="../CourseReference.html">Course Reference</a> |
<a href="../Schedule.html">Schedule</a> |
<a href="../ProjectGuide">Project Guide</a> |
<a href="../CodeExamples">Code Examples</a> |
<a href="http://www.ics.uci.edu/~thornton/">About Alex</a>
</p>

<hr />

</div>

<div class="header">

<p>ICS 32 Winter 2014<br />
   Code Examples</p>

</div>

<div class="section">

<hr />

<p class="title">Code examples, from lecture and otherwise</p>

<p>Over the course of the quarter, when I write substantial code examples in lecture &mdash; beyond just experimentation in the Python interpreter or short code fragments &mdash; I will be turning them into full-scale code examples and posting them here for you.  Be aware that there is a process involved in fleshing out a lecture example &mdash; rather than just posting code exactly as we wrote it, I'd like to turn it into something more complete and instructive &mdash; and this process takes some time, so it's best, in general, not to expect these to be available right away, but I will generally try to have them available before the next lecture, at the latest.</p>

<p>Note that you are not permitted to copy and paste any of this code into your own projects, but, of course, the techniques employed may also be of general use to you in your work.  These examples are intended to give you clean, well-documented examples of some of the things we cover in lecture (and possibly a few things that we don't, time permitting), so that you can be free in lecture to avoid trying to take detailed notes when we're writing code together, instead concentrating on understanding the process and the bigger-picture concepts at work.</p>

<table class="normal">
  <tr class="top">
    <td>Lecture Date(s)</td>
    <td>Description</td>
  </tr>
  <tr>
    <td>Th 1/9</td>
    <td><a href="ExceptionalControlFlow">Exceptional control flow in Python, applied to opening and reading from text files</a></td>
  </tr>
  <tr>
    <td>Tu 1/14</td>
    <td><a href="Recursion">Writing a recursive function to process a recursive data structure</a></td>
  </tr>
  <tr>
    <td>Th 1/16</td>
    <td><a href="SocketsPart1">Sockets, Part 1: An example socket client</a>
  </tr>
  <tr>
    <td>Tu 1/21</td>
    <td><a href="SocketsPart2">Sockets, Part 2: Improving our socket client by using "pseudo-file" objects</a></td>
  </tr>
  <tr>
    <td>Th 1/23<br />
        Tu 1/28</td>
    <td><a href="Protocols">Implementing a custom network protocol (Yackety), plus writing programs with multiple modules</a></td>
  </tr>
  <tr>
    <td>Th 1/30</td>
    <td><a href="Classes">Writing classes in Python</a></td>
  </tr>
  <tr>
    <td>Tu 2/4</td>
    <td><a href="URLs">Downloading data from the web using the <b>urllib.request</b> module</a></td>
  </tr>
</table>

</div>

</body>
</html>

